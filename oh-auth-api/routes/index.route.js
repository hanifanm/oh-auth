const express = require('express')
const bcrypt = require('bcrypt')
const jwt = require('jsonwebtoken')
const gsend = require('gmail-send')
const animals = require('animals')
const db = require('../db/sequelize')
const rg = require('./utils/response-generator')

const router = express.Router()
const JWT_KEY = 'WHATISTHIS'

/* GET home page. */
router.get('/', function (req, res, next) {
  res.render('index', { title: 'Express' });
});

router.post('/register', async (req, res, next) => {
  const autoGeneratedPassword = `${animals()}${Math.floor(Math.random() * 100)}`
  const hashedPassword = await bcrypt.hash(autoGeneratedPassword, 10)
  try {
    const user = await db.models.User.create({
      phone: req.body.phone,
      first_name: req.body.first_name,
      last_name: req.body.last_name,
      date_of_birth: req.body.date_of_birth,
      gender: req.body.gender,
      email: req.body.email,
      hashed_password: hashedPassword
    })
    const { hashed_password, ...userNoPass } = user.dataValues
    sendEmail(req.body.email, autoGeneratedPassword)
    res.send(rg(true, userNoPass, null))
  } catch (error) {
    if (error.errors) {
      res.send(rg(false, null, error.errors.map(e => e.message)))
    } else {
      res.send(rg(false, null, error))
    }
  }
})

router.post('/login', async (req, res, next) => {
  const user = await db.models.User.findOne({
    where: {
      email: req.body.email
    }
  })
  if (user) {
    const match = await bcrypt.compare(req.body.password, user.hashed_password);
    if (match) {
      const { hashed_password, ...response } = user.dataValues
      response.token = jwt.sign({ user_id: user.dataValues.id }, JWT_KEY)
      res.send(rg(true, response, null))
    } else {
      res.send(rg(false, null, ['Email and password pair doesnt match']))
    }
  } else {
    res.send(rg(false, null, ['Email doesnt match any user']))
  }
})

const sendEmail = async (email, password) => {
  const web_url = 'https://elated-engelbart-93990b.netlify.com'
  const body = `Please login to ${web_url} using:\n\nemail: ${email}\npassword: ${password}`

  gsend({
    user: process.env.GMAIL_ACCOUNT,
    pass: process.env.GMAIL_PASSWORD,
    to: email,
    subject: 'OH-AUTH CREDENTIAL',
    text: body,
  })({})
}

module.exports = router;
